plugins {
    id 'application'
    id 'org.beryx.jlink' version '2.23.6'
    id 'idea'
    id 'com.dua3.javafxgradle7plugin' version '0.0.9'
    id "de.jjohannes.extra-java-module-info" version "0.6"
}
repositories{
    mavenCentral()
}
dependencies{

    // JAVA FX //
    implementation (group: 'org.jfxtras', name: 'jmetro', version: '11.6.14'){
        exclude group: 'org.openjfx'
    }
    // ControlsFX
    implementation group: 'org.controlsfx', name: 'controlsfx', version: '11.1.0'

}
javafx {
    version = '16'
    modules = ['javafx.controls', 'javafx.swing', 'javafx.fxml']
}

compileJava.options.encoding = "UTF-8"
compileTestJava.options.encoding = "UTF-8"
mainClassName = "i18nDotPropertiesGUI/fr.clementgre.i18nDotPropertiesGUI.Main"

version = "1.0"
description = "GUI for managing i18n .properties translations"

application {
    mainModule.set('i18nDotPropertiesGUI')
    mainClass.set('fr.clementgre.i18nDotPropertiesGUI.Main')
}

run {
    jvmArgs = [
            '--add-exports=javafx.graphics/com.sun.javafx.scene=org.controlsfx.controls',
            '--add-exports=javafx.graphics/com.sun.javafx.scene.traversal=org.controlsfx.controls'
    ]
}

jlink {
    options = [
            '--strip-debug',
            '--compress', '2',
            '--no-header-files',
            '--no-man-pages'
    ] as List<String>
    launcher {
        name = 'i18nDotPropertiesGUI'
        jvmArgs = [
                '--add-exports=javafx.graphics/com.sun.javafx.scene=org.controlsfx.controls',
                '--add-exports=javafx.graphics/com.sun.javafx.scene.traversal=org.controlsfx.controls'
        ]
    }

    def os = org.gradle.internal.os.OperatingSystem.current()
    String jdkPath = project.findProperty('jdkPath')
    String platform = os.windows ? 'win' : (os.macOsX ? 'mac' : 'lin')

    if(jdkPath != null){ // Use ./gradlew jpackage -PjdkPath=xxx
        System.out.println("Using JDK passed in property: ".concat(jdkPath));
        javaHome.set(jdkPath);

    }else{
        if(os.windows) javaHome.set('C:\\Program Files\\AdoptOpenJDK\\jdk-16.0.1.9-hotspot');
        else if(os.macOsX) javaHome.set('/Library/Java/JavaVirtualMachines/adopt-openjdk-16.0.1/Contents/Home')
        else if(os.linux) javaHome.set('/etc/jdk-16.0.1/')
    }

    targetPlatform(platform, javaHome.get())

    jpackage {
        targetPlatformName = platform

        installerType = os.windows ? 'msi' : (os.macOsX ? 'dmg' : 'deb')
        installerOptions = [
                '--description', project.description,
                '--copyright', 'Copyrigth 2019 Clément Grennerat',
                '--app-version', project.version,
                '--vendor', "Clément Grennerat",
                '--type', installerType
        ] as List<String>

        if(os.windows){ // WINDOWS
            imageOptions += ['--icon', 'src/main/resources/icon.ico']
            installerOptions += [
                    '--win-dir-chooser',
                    '--win-menu',
                    '--win-shortcut'
            ]
        }else if(os.macOsX){ // MAC
            imageOptions += ['--icon', 'src/main/resources/icon.icns']
            installerOptions += [
                    "--mac-package-name", "i18nDotPropertiesGUI"
            ]
        }else if(os.linux){ // LINUX
            imageOptions += ['--icon', 'src/main/resources/icon.png']
            installerOptions += [
                    '--linux-menu-group', 'Office',
                    '--linux-shortcut'
            ]
            if(installerType == 'deb') installerOptions += ['--linux-deb-maintainer', 'clement.grennerat@free.fr']
            else if(installerType == 'rpm') installerOptions += ['--linux-rpm-license-type', 'Apache-2.0']
        }
    }
}


